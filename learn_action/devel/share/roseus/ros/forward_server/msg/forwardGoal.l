;; Auto-generated. Do not edit!


(when (boundp 'forward_server::forwardGoal)
  (if (not (find-package "FORWARD_SERVER"))
    (make-package "FORWARD_SERVER"))
  (shadow 'forwardGoal (find-package "FORWARD_SERVER")))
(unless (find-package "FORWARD_SERVER::FORWARDGOAL")
  (make-package "FORWARD_SERVER::FORWARDGOAL"))

(in-package "ROS")
;;//! \htmlinclude forwardGoal.msg.html


(defclass forward_server::forwardGoal
  :super ros::object
  :slots (_line _linear_velocity _time ))

(defmethod forward_server::forwardGoal
  (:init
   (&key
    ((:line __line) 0.0)
    ((:linear_velocity __linear_velocity) 0.0)
    ((:time __time) 0.0)
    )
   (send-super :init)
   (setq _line (float __line))
   (setq _linear_velocity (float __linear_velocity))
   (setq _time (float __time))
   self)
  (:line
   (&optional __line)
   (if __line (setq _line __line)) _line)
  (:linear_velocity
   (&optional __linear_velocity)
   (if __linear_velocity (setq _linear_velocity __linear_velocity)) _linear_velocity)
  (:time
   (&optional __time)
   (if __time (setq _time __time)) _time)
  (:serialization-length
   ()
   (+
    ;; float64 _line
    8
    ;; float64 _linear_velocity
    8
    ;; float64 _time
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _line
       (sys::poke _line (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _linear_velocity
       (sys::poke _linear_velocity (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _time
       (sys::poke _time (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _line
     (setq _line (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _linear_velocity
     (setq _linear_velocity (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _time
     (setq _time (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get forward_server::forwardGoal :md5sum-) "5a5d7ce8423f13d47048e12b1e3362e0")
(setf (get forward_server::forwardGoal :datatype-) "forward_server/forwardGoal")
(setf (get forward_server::forwardGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
float64 line
float64 linear_velocity
float64 time

")



(provide :forward_server/forwardGoal "5a5d7ce8423f13d47048e12b1e3362e0")


